<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Ural penguins - Сообщения с тегом XP</title>
  <id>http://uralbash.ru/blog/tag/xp/atom.xml</id>
  <updated>2014-06-06T22:44:00Z</updated>
  <link href="http://uralbash.ru/" />
  <link href="http://uralbash.ru/blog/tag/xp/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.4">ABlog</generator>
  <entry xml:base="http://uralbash.ru/blog/tag/xp/atom.xml">
    <title type="text">Scrum и XP: заметки с передовой</title>
    <id>http://uralbash.ru/articles/2014/scrum/</id>
    <updated>2014-06-06T22:44:00Z</updated>
    <published>2014-06-06T22:44:00Z</published>
    <link href="http://uralbash.ru/articles/2014/scrum/" />
    <author>
      <name>Uralbash</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;scrum-xp&quot;&gt;

&lt;img alt=&quot;../../../_images/scrum.png&quot; class=&quot;align-left&quot; src=&quot;../../../_images/scrum.png&quot; /&gt;
&lt;p&gt;Старая, но очень полезная книга по &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Agile&lt;/span&gt;&lt;/code&gt;. Довольно редкий случай когда вся
книга описывает рабочие процессы реальной организации, никакой воды, никакой
зауми и вялой теории. Очень рекомендую. Тем более книга в свободном доступе и
переведена на русский язык (лучи добра и счастья переводчикам).&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://scrum.org.ua/wp-content/uploads/2008/12/scrum_xp-from-the-trenches-rus-final.pdf&quot;&gt;http://scrum.org.ua/wp-content/uploads/2008/12/scrum_xp-from-the-trenches-rus-final.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Дальше несколько интересных цитат из книги:&lt;/p&gt;
&lt;p&gt;По правде говоря, у системы с высоким внутренним качеством иногда может быть
довольно низкое внешнее. Но наоборот бывает крайне редко. Сложно построить
что-то хорошее на прогнившем фундаменте.&lt;/p&gt;
&lt;p&gt;По моему личному опыту, жертвовать внутренним качеством – это практически
всегда очень и очень плохая идея. Сэкономленное время ничтожно мало по
сравнению с той ценой, которую вам придётся заплатить как в ближайшем будущем,
так и в перспективе. Как только
качество вашего кода ухудшится, восстановить его будет очень тяжело.&lt;/p&gt;
&lt;p&gt;Учитесь оставаться в рамках установленного времени, учитесь давать реалистичные
оценки. Это касается как продолжительности встреч, так и продолжительности
спринта.&lt;/p&gt;
&lt;p&gt;А различие очень простое: истории это нечто, что можно продемонстрировать, что
представляет ценность для product owner’а, а задачи либо нельзя
продемонстрировать, либо они не представляют ценности для product owner’a.&lt;/p&gt;
&lt;p&gt;Пример разбиения истории на более мелкие:&lt;/p&gt;
&lt;img alt=&quot;../../../_images/scrum2.png&quot; src=&quot;../../../_images/scrum2.png&quot; /&gt;
&lt;p&gt;Пример разбиения истории на задачи:&lt;/p&gt;
&lt;img alt=&quot;../../../_images/scrum3.png&quot; src=&quot;../../../_images/scrum3.png&quot; /&gt;
&lt;p&gt;Мы попробовали различные варианты работы с техническими историями. Мы пробовали
считать их самыми обычными user story. Это была неудачная идея: для product
owner&amp;#8217;а приоритезировать их в product backlog&amp;#8217;е было всё равно, что сравнить
тёплое с мягким. По очевидным причинам технические истории получали самый
низкий приоритет с объяснением: &amp;#8220;Да, ребята, несомненно, ваш сервер непрерывной
интеграции – очень важная штука, но давайте сперва реализуем кое-какие
прибыльные функции? После этого вы можете прикрутить вашу техническую конфетку,
окей?&amp;#8221;&lt;/p&gt;
&lt;img alt=&quot;../../../_images/scrum4.png&quot; src=&quot;../../../_images/scrum4.png&quot; /&gt;
&lt;p&gt;если вы пользуетесь стикерами для задач, не забудьте прикрепить их скотчем, или
же в один &amp;#8220;прекрасный&amp;#8221; день вы найдете их аккуратной кучкой на полу.&lt;/p&gt;
&lt;img alt=&quot;../../../_images/scrum5.png&quot; src=&quot;../../../_images/scrum5.png&quot; /&gt;
&lt;p&gt;Как быть с опоздавшими?&lt;/p&gt;
&lt;p&gt;Некоторые команды заводят специальную копилку. Если вы опоздали, даже на
минуту, вы кидаете в копилку определённую сумму. Без вариантов. Даже если вы
позвонили перед началом ежедневного Scrum&amp;#8217;а и предупредили, заплатить всё равно
придётся :o)&lt;/p&gt;
&lt;p&gt;Деньги из копилки используются на общественные нужды. Например, на них можно заказать пиццу&lt;/p&gt;
&lt;img alt=&quot;../../../_images/scrum6.png&quot; src=&quot;../../../_images/scrum6.png&quot; /&gt;
&lt;p&gt;Если вы действительно хотите разобраться, как планировать релиз, советую
пропустить эту главу и купить книгу Майка Кона &amp;#8220;Agile Estimating and Planning&amp;#8221;.
Эх, прочитать бы мне эту книгу раньше... (она попалась мне уже после того, как
мы на собственном опыте поняли, что к чему...). Мой способ планирования
простой, как угол дома, но может послужить вам хорошей отправной точкой.&lt;/p&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;http://www.books.ru/books/scrum-gibkaya-razrabotka-po-signature-series-3643772/?show=1&amp;amp;bkrand=1ncaafgaia8ck1qvpo5u9nklk0/?partner=490327&quot;&gt;&lt;img alt=&quot;../../../_images/scrum_book.jpg&quot; class=&quot;align-left&quot; src=&quot;../../../_images/scrum_book.jpg&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Вот эта книга, кстати тоже переведена на русский&lt;/p&gt;
&lt;br clear=&quot;both&quot;/&gt;&lt;p&gt;Scrum решает вопросы управления и организации, тогда как XP специализируется на
инженерных практиках. Вот почему эти две технологии хорошо работают вместе,
дополняя друг друга.&lt;/p&gt;
&lt;p&gt;Работка через тестирование (TDD)&lt;/p&gt;
&lt;p&gt;Наконец-то! Разработка через тестирование для меня важнее, чем Scrum и XP
вместе взятые. Можете отнять у меня дом, телевизор, собаку, но только
попробуйте запретить использование TDD! Если вам не нравится TDD, тогда просто
не подпускайте меня близко, иначе я всё равно привнесу его в проект втихую :)&lt;/p&gt;
&lt;p&gt;Мы столкнулись с ситуацией, когда было невозможно внедрить Scrum в большом
проекте из-за того, что его команда постоянно тушила пожары, т.е. в панике
устраняла дефекты преждевременно выпущенной системы. Это был порочный круг:
из-за того, что всё время уходило на постоянную борьбу с пожарами, не было
времени на их предотвращение (т.е. на улучшение архитектуры, внедрение
автоматического тестирования, создание систем мониторинга и оповещения, и т.п.)&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
