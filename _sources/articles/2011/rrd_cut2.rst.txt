.. post:: 21 Dec, 2011 23:02
   :tags: Python, RRDTool
   :category: Python
   :author: Uralbash
   :language: ru

upd: Режем пики в rrd
=====================

Обновления в скрипте :ref:`rrd_cut`. В предыдущем варианте скрипт получал
предельное значение и если любое значение в :l:`rrd` файле его превышало, то
оно обнулялось. Это неудобно когда для каждого ``datasource`` нужно задавать
свой предел. Ниже пример где несколько строк, в каждой строке 6 значений.

.. code-block:: xml

   <database>
       <row><v>1.2531404050e+04</v><v>1.1760614140e+03</v><v>1.0547667362e+01</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
       <row><v>6.2535788107e+03</v><v>6.5077305135e+02</v><v>5.9844172295e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
       <row><v>7.4349123852e+03</v><v>7.2086196285e+02</v><v>6.7862914917e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
       <row><v>6.6044470194e+03</v><v>6.1316221529e+02</v><v>6.2081965076e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
       <row><v>1.6377377735e+04</v><v>2.8213539887e+03</v><v>1.4662221016e+01</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
       <row><v>1.4991881969e+04</v><v>1.9741971231e+03</v><v>1.3208469357e+01</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v><v>0.0000000000e+00</v></row>
   ...
   </database>

Намного юзабильней когда можно задать для каждого из этих 6 значений своё
ограничение. Код и примеры брать здесь
https://github.com/uralbash/rrd_killerpeak
